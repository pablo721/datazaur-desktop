# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'analytics_widget.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, Qt
from my_charts import OHLCChart, LineChart, MultiLineChart
from my_tables import MyTable
from statarb_algo import StatArbAlgorithm
from settings import TestSettings
from database_tab import DatabaseTab
import pandas as pd
import numpy as np
import datetime
from statsmodels.tsa.api import adfuller, kpss
from analysis_tabs import EGTabs, BacktestTabs, TestWindow, JohansenTabs
from statsmodels.api import OLS
from statsmodels.tsa.vector_ar import vecm
from pandasmodel import PandasModel
import ccxt
import sys


class Analytics(QtWidgets.QWidget):
    def __init__(self, parent, zaur):
        super().__init__(parent)
        self.zaur = zaur
        self.setObjectName("Form")
        self.resize(1010, 637)
        self.setStyleSheet("background-color: rgb(6, 16, 36);\n"
                           "alternate-background-color: rgb(2, 32, 42);\n"
                           "selection-background-color: rgb(2, 54, 16);\n"
                           "color: rgb(255, 255, 255);\n"
                           "font: 75 12pt \"Ubuntu Bold\";")
        self.tabWidget_2 = QtWidgets.QTabWidget(self)
        self.tabWidget_2.setGeometry(QtCore.QRect(0, 0, 901, 516))
        self.tabWidget_2.setStyleSheet("font: 75 12pt \"FreeMono Bold\";")
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.frame_5 = QtWidgets.QFrame(self.tab_4)
        self.frame_5.setGeometry(QtCore.QRect(0, 0, 901, 481))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(117, 231, 9))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(97, 192, 7))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(39, 77, 3))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(52, 103, 4))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 204, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(117, 231, 9))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(97, 192, 7))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(39, 77, 3))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(52, 103, 4))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(166, 204, 130))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(39, 77, 3))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(117, 231, 9))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(97, 192, 7))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(39, 77, 3))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(52, 103, 4))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(39, 77, 3))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(39, 77, 3))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.frame_5.setPalette(palette)
        self.frame_5.setStyleSheet("font: 75 10.5pt \"FreeMono Bold\";")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.groupBox_11 = QtWidgets.QGroupBox(self.frame_5)
        self.groupBox_11.setGeometry(QtCore.QRect(10, 5, 241, 156))
        self.groupBox_11.setObjectName("groupBox_11")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.groupBox_11)
        self.lineEdit_2.setGeometry(QtCore.QRect(10, 30, 131, 29))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.comboBox_5 = QtWidgets.QComboBox(self.groupBox_11)
        self.comboBox_5.setGeometry(QtCore.QRect(155, 30, 76, 29))
        self.comboBox_5.setObjectName("comboBox_5")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.pushButton_43 = QtWidgets.QPushButton(self.groupBox_11)
        self.pushButton_43.setGeometry(QtCore.QRect(155, 85, 76, 26))
        self.pushButton_43.setObjectName("pushButton_43")
        self.pushButton_48 = QtWidgets.QPushButton(self.groupBox_11)
        self.pushButton_48.setGeometry(QtCore.QRect(155, 120, 76, 26))
        self.pushButton_48.setObjectName("pushButton_48")
        self.listWidget = QtWidgets.QListWidget(self.groupBox_11)
        self.listWidget.setGeometry(QtCore.QRect(10, 85, 131, 61))
        self.listWidget.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.listWidget.setObjectName("listWidget")
        self.label_16 = QtWidgets.QLabel(self.groupBox_11)
        self.label_16.setGeometry(QtCore.QRect(15, 60, 61, 25))
        self.label_16.setObjectName("label_16")
        self.groupBox_7 = QtWidgets.QGroupBox(self.frame_5)
        self.groupBox_7.setGeometry(QtCore.QRect(560, 5, 326, 411))
        self.groupBox_7.setObjectName("groupBox_7")
        self.tabWidget_4 = QtWidgets.QTabWidget(self.groupBox_7)
        self.tabWidget_4.setGeometry(QtCore.QRect(5, 25, 316, 386))
        self.tabWidget_4.setObjectName("tabWidget_4")
        self.tab_9 = QtWidgets.QWidget()
        self.tab_9.setObjectName("tab_9")
        self.frame_10 = QtWidgets.QFrame(self.tab_9)
        self.frame_10.setGeometry(QtCore.QRect(5, 5, 301, 346))
        self.frame_10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_10.setObjectName("frame_10")
        self.label_6 = QtWidgets.QLabel(self.frame_10)
        self.label_6.setGeometry(QtCore.QRect(10, 10, 151, 27))
        self.label_6.setObjectName("label_6")
        self.label_8 = QtWidgets.QLabel(self.frame_10)
        self.label_8.setGeometry(QtCore.QRect(10, 50, 121, 27))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.frame_10)
        self.label_9.setGeometry(QtCore.QRect(10, 90, 171, 27))
        self.label_9.setObjectName("label_9")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.frame_10)
        self.lineEdit_5.setGeometry(QtCore.QRect(210, 10, 81, 27))
        self.lineEdit_5.setClearButtonEnabled(False)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.frame_10)
        self.lineEdit_6.setGeometry(QtCore.QRect(210, 50, 81, 27))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit_9 = QtWidgets.QLineEdit(self.frame_10)
        self.lineEdit_9.setGeometry(QtCore.QRect(210, 90, 81, 27))
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.groupBox_3 = QtWidgets.QGroupBox(self.frame_10)
        self.groupBox_3.setGeometry(QtCore.QRect(10, 235, 281, 71))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.groupBox_3.setPalette(palette)
        self.groupBox_3.setObjectName("groupBox_3")
        self.label_11 = QtWidgets.QLabel(self.groupBox_3)
        self.label_11.setGeometry(QtCore.QRect(119, 30, 43, 16))
        self.label_11.setStyleSheet("font: 10pt \"Ubuntu\";")
        self.label_11.setObjectName("label_11")
        self.label_7 = QtWidgets.QLabel(self.groupBox_3)
        self.label_7.setGeometry(QtCore.QRect(10, 30, 71, 16))
        self.label_7.setStyleSheet("font: 10pt \"Ubuntu\";")
        self.label_7.setObjectName("label_7")
        self.label_10 = QtWidgets.QLabel(self.groupBox_3)
        self.label_10.setGeometry(QtCore.QRect(210, 30, 61, 16))
        self.label_10.setStyleSheet("font: 9pt \"Ubuntu\";")
        self.label_10.setObjectName("label_10")
        self.horizontalSlider_3 = QtWidgets.QSlider(self.groupBox_3)
        self.horizontalSlider_3.setGeometry(QtCore.QRect(10, 50, 261, 16))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(82, 4, 4))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(82, 4, 4))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(78, 154, 6))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(145, 145, 145))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Highlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.horizontalSlider_3.setPalette(palette)
        self.horizontalSlider_3.setAutoFillBackground(False)
        self.horizontalSlider_3.setStyleSheet("")
        self.horizontalSlider_3.setMinimum(-100)
        self.horizontalSlider_3.setMaximum(100)
        self.horizontalSlider_3.setProperty("value", 0)
        self.horizontalSlider_3.setSliderPosition(0)
        self.horizontalSlider_3.setTracking(False)
        self.horizontalSlider_3.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_3.setInvertedAppearance(True)
        self.horizontalSlider_3.setInvertedControls(False)
        self.horizontalSlider_3.setObjectName("horizontalSlider_3")
        self.lineEdit_16 = QtWidgets.QLineEdit(self.frame_10)
        self.lineEdit_16.setGeometry(QtCore.QRect(210, 170, 81, 27))
        self.lineEdit_16.setObjectName("lineEdit_16")
        self.checkBox_2 = QtWidgets.QCheckBox(self.frame_10)
        self.checkBox_2.setGeometry(QtCore.QRect(10, 170, 91, 23))
        self.checkBox_2.setObjectName("checkBox_2")
        self.label_12 = QtWidgets.QLabel(self.frame_10)
        self.label_12.setGeometry(QtCore.QRect(10, 205, 81, 27))
        self.label_12.setObjectName("label_12")
        self.comboBox_7 = QtWidgets.QComboBox(self.frame_10)
        self.comboBox_7.setGeometry(QtCore.QRect(98, 205, 105, 27))
        self.comboBox_7.setObjectName("comboBox_7")
        self.comboBox_7.addItem("")
        self.comboBox_7.addItem("")
        self.comboBox_7.addItem("")
        self.comboBox_8 = QtWidgets.QComboBox(self.frame_10)
        self.comboBox_8.setGeometry(QtCore.QRect(210, 205, 81, 27))
        self.comboBox_8.setObjectName("comboBox_8")
        self.comboBox_8.addItem("")
        self.comboBox_8.addItem("")
        self.lineEdit_14 = QtWidgets.QLineEdit(self.frame_10)
        self.lineEdit_14.setGeometry(QtCore.QRect(210, 130, 81, 27))
        self.lineEdit_14.setText("")
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.checkBox_5 = QtWidgets.QCheckBox(self.frame_10)
        self.checkBox_5.setGeometry(QtCore.QRect(10, 130, 106, 23))
        self.checkBox_5.setObjectName("checkBox_5")
        self.pushButton_42 = QtWidgets.QPushButton(self.frame_10)
        self.pushButton_42.setGeometry(QtCore.QRect(210, 310, 81, 31))
        self.pushButton_42.setObjectName("pushButton_42")
        self.pushButton_41 = QtWidgets.QPushButton(self.frame_10)
        self.pushButton_41.setGeometry(QtCore.QRect(10, 310, 81, 31))
        self.pushButton_41.setObjectName("pushButton_41")
        self.tabWidget_4.addTab(self.tab_9, "")
        self.tab_10 = QtWidgets.QWidget()
        self.tab_10.setObjectName("tab_10")
        self.frame_15 = QtWidgets.QFrame(self.tab_10)
        self.frame_15.setGeometry(QtCore.QRect(5, 5, 301, 321))
        self.frame_15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_15.setObjectName("frame_15")
        self.label_21 = QtWidgets.QLabel(self.frame_15)
        self.label_21.setGeometry(QtCore.QRect(10, 50, 71, 27))
        self.label_21.setObjectName("label_21")
        self.label_23 = QtWidgets.QLabel(self.frame_15)
        self.label_23.setGeometry(QtCore.QRect(10, 90, 171, 27))
        self.label_23.setObjectName("label_23")
        self.label_26 = QtWidgets.QLabel(self.frame_15)
        self.label_26.setGeometry(QtCore.QRect(10, 170, 81, 27))
        self.label_26.setObjectName("label_26")
        self.comboBox_11 = QtWidgets.QComboBox(self.frame_15)
        self.comboBox_11.setGeometry(QtCore.QRect(98, 170, 105, 27))
        self.comboBox_11.setObjectName("comboBox_11")
        self.comboBox_11.addItem("")
        self.comboBox_11.addItem("")
        self.comboBox_11.addItem("")
        self.comboBox_12 = QtWidgets.QComboBox(self.frame_15)
        self.comboBox_12.setGeometry(QtCore.QRect(210, 170, 81, 27))
        self.comboBox_12.setObjectName("comboBox_12")
        self.comboBox_12.addItem("")
        self.comboBox_12.addItem("")
        self.comboBox_12.addItem("")
        self.label_31 = QtWidgets.QLabel(self.frame_15)
        self.label_31.setGeometry(QtCore.QRect(10, 10, 76, 27))
        self.label_31.setObjectName("label_31")
        self.label_40 = QtWidgets.QLabel(self.frame_15)
        self.label_40.setGeometry(QtCore.QRect(150, 10, 81, 27))
        self.label_40.setObjectName("label_40")
        self.lineEdit_7 = QtWidgets.QLineEdit(self.frame_15)
        self.lineEdit_7.setGeometry(QtCore.QRect(90, 10, 51, 27))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.lineEdit_8 = QtWidgets.QLineEdit(self.frame_15)
        self.lineEdit_8.setGeometry(QtCore.QRect(240, 10, 51, 27))
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.lineEdit_10 = QtWidgets.QLineEdit(self.frame_15)
        self.lineEdit_10.setGeometry(QtCore.QRect(240, 50, 51, 27))
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.lineEdit_11 = QtWidgets.QLineEdit(self.frame_15)
        self.lineEdit_11.setGeometry(QtCore.QRect(240, 90, 51, 27))
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.lineEdit_12 = QtWidgets.QLineEdit(self.frame_15)
        self.lineEdit_12.setGeometry(QtCore.QRect(240, 130, 51, 27))
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.checkBox_3 = QtWidgets.QCheckBox(self.frame_15)
        self.checkBox_3.setGeometry(QtCore.QRect(10, 130, 91, 23))
        self.checkBox_3.setObjectName("checkBox_3")
        self.lineEdit_17 = QtWidgets.QLineEdit(self.frame_15)
        self.lineEdit_17.setGeometry(QtCore.QRect(90, 50, 51, 27))
        self.lineEdit_17.setObjectName("lineEdit_17")
        self.label_24 = QtWidgets.QLabel(self.frame_15)
        self.label_24.setGeometry(QtCore.QRect(150, 50, 71, 27))
        self.label_24.setObjectName("label_24")
        self.pushButton_47 = QtWidgets.QPushButton(self.frame_15)
        self.pushButton_47.setGeometry(QtCore.QRect(210, 210, 81, 31))
        self.pushButton_47.setObjectName("pushButton_47")
        self.tabWidget_4.addTab(self.tab_10, "")
        self.tab_11 = QtWidgets.QWidget()
        self.tab_11.setObjectName("tab_11")
        self.frame_16 = QtWidgets.QFrame(self.tab_11)
        self.frame_16.setGeometry(QtCore.QRect(5, 5, 300, 321))
        self.frame_16.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_16.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_16.setObjectName("frame_16")
        self.label_29 = QtWidgets.QLabel(self.frame_16)
        self.label_29.setGeometry(QtCore.QRect(10, 10, 121, 27))
        self.label_29.setObjectName("label_29")
        self.lineEdit_21 = QtWidgets.QLineEdit(self.frame_16)
        self.lineEdit_21.setGeometry(QtCore.QRect(150, 10, 141, 27))
        self.lineEdit_21.setObjectName("lineEdit_21")
        self.label_50 = QtWidgets.QLabel(self.frame_16)
        self.label_50.setGeometry(QtCore.QRect(10, 50, 71, 27))
        self.label_50.setObjectName("label_50")
        self.comboBox_24 = QtWidgets.QComboBox(self.frame_16)
        self.comboBox_24.setGeometry(QtCore.QRect(90, 50, 71, 27))
        self.comboBox_24.setObjectName("comboBox_24")
        self.label_51 = QtWidgets.QLabel(self.frame_16)
        self.label_51.setGeometry(QtCore.QRect(170, 50, 51, 27))
        self.label_51.setObjectName("label_51")
        self.comboBox_25 = QtWidgets.QComboBox(self.frame_16)
        self.comboBox_25.setGeometry(QtCore.QRect(230, 50, 61, 27))
        self.comboBox_25.setObjectName("comboBox_25")
        self.comboBox_25.addItem("")
        self.comboBox_25.addItem("")
        self.comboBox_16 = QtWidgets.QComboBox(self.frame_16)
        self.comboBox_16.setGeometry(QtCore.QRect(210, 210, 81, 27))
        self.comboBox_16.setObjectName("comboBox_16")
        self.comboBox_16.addItem("")
        self.comboBox_16.addItem("")
        self.comboBox_16.addItem("")
        self.comboBox_16.addItem("")
        self.lineEdit_26 = QtWidgets.QLineEdit(self.frame_16)
        self.lineEdit_26.setGeometry(QtCore.QRect(100, 210, 101, 27))
        self.lineEdit_26.setObjectName("lineEdit_26")
        self.checkBox = QtWidgets.QCheckBox(self.frame_16)
        self.checkBox.setGeometry(QtCore.QRect(10, 210, 81, 31))
        self.checkBox.setObjectName("checkBox")
        self.lineEdit_13 = QtWidgets.QLineEdit(self.frame_16)
        self.lineEdit_13.setGeometry(QtCore.QRect(230, 90, 61, 27))
        self.lineEdit_13.setObjectName("lineEdit_13")
        self.label_22 = QtWidgets.QLabel(self.frame_16)
        self.label_22.setGeometry(QtCore.QRect(10, 90, 71, 27))
        self.label_22.setObjectName("label_22")
        self.lineEdit_18 = QtWidgets.QLineEdit(self.frame_16)
        self.lineEdit_18.setGeometry(QtCore.QRect(90, 90, 51, 27))
        self.lineEdit_18.setObjectName("lineEdit_18")
        self.label_25 = QtWidgets.QLabel(self.frame_16)
        self.label_25.setGeometry(QtCore.QRect(160, 90, 68, 27))
        self.label_25.setObjectName("label_25")
        self.checkBox_4 = QtWidgets.QCheckBox(self.frame_16)
        self.checkBox_4.setGeometry(QtCore.QRect(10, 130, 91, 23))
        self.checkBox_4.setObjectName("checkBox_4")
        self.lineEdit_19 = QtWidgets.QLineEdit(self.frame_16)
        self.lineEdit_19.setGeometry(QtCore.QRect(150, 130, 141, 27))
        self.lineEdit_19.setObjectName("lineEdit_19")
        self.label_30 = QtWidgets.QLabel(self.frame_16)
        self.label_30.setGeometry(QtCore.QRect(10, 170, 81, 27))
        self.label_30.setObjectName("label_30")
        self.comboBox_13 = QtWidgets.QComboBox(self.frame_16)
        self.comboBox_13.setGeometry(QtCore.QRect(210, 170, 81, 27))
        self.comboBox_13.setObjectName("comboBox_13")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_13.addItem("")
        self.comboBox_14 = QtWidgets.QComboBox(self.frame_16)
        self.comboBox_14.setGeometry(QtCore.QRect(98, 170, 105, 27))
        self.comboBox_14.setObjectName("comboBox_14")
        self.comboBox_14.addItem("")
        self.comboBox_14.addItem("")
        self.comboBox_14.addItem("")
        self.pushButton_45 = QtWidgets.QPushButton(self.frame_16)
        self.pushButton_45.setGeometry(QtCore.QRect(210, 285, 81, 31))
        self.pushButton_45.setObjectName("pushButton_45")
        self.tabWidget_4.addTab(self.tab_11, "")
        self.groupBox = QtWidgets.QGroupBox(self.frame_5)
        self.groupBox.setGeometry(QtCore.QRect(255, 5, 96, 156))
        self.groupBox.setObjectName("groupBox")
        self.comboBox_31 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_31.setGeometry(QtCore.QRect(10, 30, 76, 29))
        self.comboBox_31.setObjectName("comboBox_31")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_31.addItem("")
        self.comboBox_30 = QtWidgets.QComboBox(self.groupBox)
        self.comboBox_30.setGeometry(QtCore.QRect(10, 115, 76, 29))
        self.comboBox_30.setObjectName("comboBox_30")
        self.label_15 = QtWidgets.QLabel(self.groupBox)
        self.label_15.setGeometry(QtCore.QRect(10, 90, 61, 25))
        self.label_15.setObjectName("label_15")
        self.groupBox_5 = QtWidgets.QGroupBox(self.frame_5)
        self.groupBox_5.setGeometry(QtCore.QRect(10, 175, 341, 281))
        self.groupBox_5.setObjectName("groupBox_5")
        self.pushButton_36 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_36.setGeometry(QtCore.QRect(10, 40, 41, 31))
        self.pushButton_36.setMinimumSize(QtCore.QSize(31, 27))
        self.pushButton_36.setMaximumSize(QtCore.QSize(55, 36))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Bold")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.pushButton_36.setFont(font)
        self.pushButton_36.setStyleSheet("font: 75 12pt \"Ubuntu Bold\";\n"
                                         "color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(9, 28, 46);")
        self.pushButton_36.setObjectName("pushButton_36")
        self.tableView_2 = MyTable(self.groupBox_5)
        self.tableView_2.setGeometry(QtCore.QRect(60, 30, 271, 201))
        self.tableView_2.setObjectName("tableView_2")
        self.tableView_2.setSortingEnabled(False)
        self.lineEdit_15 = QtWidgets.QLineEdit(self.groupBox_5)
        self.lineEdit_15.setEnabled(False)
        self.lineEdit_15.setGeometry(QtCore.QRect(100, 240, 161, 29))
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.pushButton_33 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_33.setGeometry(QtCore.QRect(10, 200, 41, 31))
        self.pushButton_33.setMinimumSize(QtCore.QSize(41, 27))
        self.pushButton_33.setMaximumSize(QtCore.QSize(55, 36))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Bold")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.pushButton_33.setFont(font)
        self.pushButton_33.setStyleSheet("font: 75 11pt \"Ubuntu Bold\";\n"
                                         "color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(55, 15, 15);")
        self.pushButton_33.setObjectName("pushButton_33")
        self.pushButton_35 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_35.setGeometry(QtCore.QRect(270, 240, 61, 29))
        self.pushButton_35.setMinimumSize(QtCore.QSize(45, 27))
        self.pushButton_35.setMaximumSize(QtCore.QSize(120, 36))
        self.pushButton_35.setStyleSheet("font: 75 10pt \"Ubuntu Bold\";\n"
                                         "color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(9, 50, 25);")
        self.pushButton_35.setObjectName("pushButton_35")
        self.pushButton_34 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_34.setGeometry(QtCore.QRect(10, 130, 41, 31))
        self.pushButton_34.setMinimumSize(QtCore.QSize(41, 27))
        self.pushButton_34.setMaximumSize(QtCore.QSize(55, 36))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Bold")
        font.setPointSize(12)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.pushButton_34.setFont(font)
        self.pushButton_34.setStyleSheet("font: 75 12pt \"Ubuntu Bold\";\n"
                                         "color: rgb(255, 255, 255);\n"
                                         "background-color: rgb(9, 50, 25);")
        self.pushButton_34.setObjectName("pushButton_34")
        self.checkBox_8 = QtWidgets.QCheckBox(self.groupBox_5)
        self.checkBox_8.setGeometry(QtCore.QRect(15, 80, 36, 16))
        self.checkBox_8.setChecked(False)
        self.checkBox_8.setObjectName("checkBox_8")
        self.pushButton_51 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_51.setEnabled(False)
        self.pushButton_51.setGeometry(QtCore.QRect(10, 105, 41, 16))
        self.pushButton_51.setMinimumSize(QtCore.QSize(41, 15))
        self.pushButton_51.setMaximumSize(QtCore.QSize(55, 50))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setPointSize(16)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.pushButton_51.setFont(font)
        self.pushButton_51.setStyleSheet("font: 75 16pt \"Ubuntu Condensed\";\n"
                                         "color: rgb(0, 0, 0);\n"
                                         "background-color: rgb(0, 0, 0);")
        self.pushButton_51.setObjectName("pushButton_51")
        self.pushButton_53 = QtWidgets.QPushButton(self.groupBox_5)
        self.pushButton_53.setEnabled(False)
        self.pushButton_53.setGeometry(QtCore.QRect(10, 172, 41, 16))
        self.pushButton_53.setMinimumSize(QtCore.QSize(41, 15))
        self.pushButton_53.setMaximumSize(QtCore.QSize(55, 50))
        font = QtGui.QFont()
        font.setFamily("Ubuntu Condensed")
        font.setPointSize(16)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.pushButton_53.setFont(font)
        self.pushButton_53.setStyleSheet("font: 75 16pt \"Ubuntu Condensed\";\n"
                                         "color: rgb(0, 0, 0);\n"
                                         "background-color: rgb(0, 0, 0);")
        self.pushButton_53.setObjectName("pushButton_53")
        self.comboBox_32 = QtWidgets.QComboBox(self.groupBox_5)
        self.comboBox_32.setGeometry(QtCore.QRect(10, 240, 81, 29))
        self.comboBox_32.setObjectName("comboBox_32")
        self.comboBox_32.addItem("")
        self.comboBox_32.addItem("")
        self.comboBox_32.addItem("")
        self.groupBox_10 = QtWidgets.QGroupBox(self.frame_5)
        self.groupBox_10.setGeometry(QtCore.QRect(360, 150, 191, 276))
        self.groupBox_10.setStyleSheet("")
        self.groupBox_10.setObjectName("groupBox_10")
        self.groupBox_12 = QtWidgets.QGroupBox(self.groupBox_10)
        self.groupBox_12.setGeometry(QtCore.QRect(10, 135, 171, 126))
        self.groupBox_12.setObjectName("groupBox_12")
        self.pushButton_44 = QtWidgets.QPushButton(self.groupBox_12)
        self.pushButton_44.setGeometry(QtCore.QRect(95, 85, 66, 31))
        self.pushButton_44.setStyleSheet("")
        self.pushButton_44.setObjectName("pushButton_44")
        self.checkBox_7 = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkBox_7.setGeometry(QtCore.QRect(15, 55, 71, 26))
        self.checkBox_7.setChecked(True)
        self.checkBox_7.setObjectName("checkBox_7")
        self.checkBox_10 = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkBox_10.setGeometry(QtCore.QRect(15, 25, 71, 26))
        self.checkBox_10.setChecked(True)
        self.checkBox_10.setObjectName("checkBox_10")
        self.checkBox_11 = QtWidgets.QCheckBox(self.groupBox_12)
        self.checkBox_11.setGeometry(QtCore.QRect(95, 25, 61, 26))
        self.checkBox_11.setChecked(True)
        self.checkBox_11.setObjectName("checkBox_11")
        self.pushButton_46 = QtWidgets.QPushButton(self.groupBox_12)
        self.pushButton_46.setGeometry(QtCore.QRect(15, 85, 66, 31))
        self.pushButton_46.setStyleSheet("")
        self.pushButton_46.setObjectName("pushButton_46")
        self.label_19 = QtWidgets.QLabel(self.groupBox_12)
        self.label_19.setGeometry(QtCore.QRect(95, 55, 36, 25))
        self.label_19.setObjectName("label_19")
        self.spinBox = QtWidgets.QSpinBox(self.groupBox_12)
        self.spinBox.setGeometry(QtCore.QRect(130, 55, 36, 25))
        self.spinBox.setMaximum(5)
        self.spinBox.setProperty("value", 1)
        self.spinBox.setObjectName("spinBox")
        self.groupBox_9 = QtWidgets.QGroupBox(self.groupBox_10)
        self.groupBox_9.setGeometry(QtCore.QRect(10, 25, 171, 106))
        self.groupBox_9.setObjectName("groupBox_9")
        self.comboBox_22 = QtWidgets.QComboBox(self.groupBox_9)
        self.checkBox_82 = QtWidgets.QCheckBox(self.groupBox_9)
        self.checkBox_82.setGeometry(QtCore.QRect(15, 65, 52, 25))
        self.checkBox_82.setChecked(False)
        self.checkBox_82.setObjectName("checkBox_8")
        self.checkBox_82.setText("logs")
        self.comboBox_22.setEnabled(True)
        self.comboBox_22.setGeometry(QtCore.QRect(10, 30, 151, 29))
        self.comboBox_22.setStyleSheet("")
        self.comboBox_22.setObjectName("comboBox_22")
        self.comboBox_22.addItem("")
        self.comboBox_22.addItem("")
        self.pushButton_52 = QtWidgets.QPushButton(self.groupBox_9)
        self.pushButton_52.setGeometry(QtCore.QRect(95, 65, 66, 31))
        self.pushButton_52.setStyleSheet("")
        self.pushButton_52.setObjectName("pushButton_52")
        self.groupBox_2 = QtWidgets.QGroupBox(self.frame_5)
        self.groupBox_2.setEnabled(True)
        self.groupBox_2.setGeometry(QtCore.QRect(360, 5, 186, 126))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(114, 159, 207))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(6, 16, 36))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(12, 24, 44))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(12, 24, 44))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(33, 33, 33))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(32, 33, 33))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(12, 23, 44))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(12, 24, 44, 0))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.groupBox_2.setPalette(palette)
        self.groupBox_2.setFlat(False)
        self.groupBox_2.setCheckable(True)
        self.groupBox_2.setChecked(False)
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_17 = QtWidgets.QLabel(self.groupBox_2)
        self.label_17.setGeometry(QtCore.QRect(15, 28, 71, 16))
        self.label_17.setStyleSheet("")
        self.label_17.setObjectName("label_17")
        self.dateTimeEdit_3 = QtWidgets.QDateTimeEdit(self.groupBox_2)
        self.dateTimeEdit_3.setEnabled(False)
        self.dateTimeEdit_3.setGeometry(QtCore.QRect(5, 95, 166, 27))
        font = QtGui.QFont()
        font.setFamily("FreeMono Bold")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.dateTimeEdit_3.setFont(font)
        self.dateTimeEdit_3.setStyleSheet("")
        self.dateTimeEdit_3.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedKingdom))
        self.dateTimeEdit_3.setTimeSpec(QtCore.Qt.UTC)
        self.dateTimeEdit_3.setObjectName("dateTimeEdit_3")
        self.dateTimeEdit_4 = QtWidgets.QDateTimeEdit(self.groupBox_2)
        self.dateTimeEdit_4.setEnabled(False)
        self.dateTimeEdit_4.setGeometry(QtCore.QRect(5, 45, 166, 27))
        font = QtGui.QFont()
        font.setFamily("FreeMono Bold")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.dateTimeEdit_4.setFont(font)
        self.dateTimeEdit_4.setStyleSheet("")
        self.dateTimeEdit_4.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedKingdom))
        self.dateTimeEdit_4.setTimeSpec(QtCore.Qt.UTC)
        self.dateTimeEdit_4.setObjectName("dateTimeEdit_4")
        self.radioButton = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton.setGeometry(QtCore.QRect(5, 75, 86, 21))
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.groupBox_2)
        self.radioButton_2.setGeometry(QtCore.QRect(110, 75, 51, 21))
        self.radioButton_2.setChecked(True)
        self.radioButton_2.setObjectName("radioButton_2")
        self.tabWidget_2.addTab(self.tab_4, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.tabWidget_8 = QtWidgets.QTabWidget(self.tab_5)
        self.tabWidget_8.setGeometry(QtCore.QRect(0, 1, 901, 481))
        self.tabWidget_8.setObjectName("tabWidget_8")
        self.tabWidget_2.addTab(self.tab_5, "")
        self.groupBox_2.setChecked(False)
        self.toggle_custom_time()

        self.databasetab = DatabaseTab(self.tabWidget_2, self.zaur)
        self.tabWidget_2.addTab(self.databasetab, "database")

        self.retranslateUi()
        self.tabWidget_4.setCurrentIndex(0)

        self.df = pd.DataFrame(index=['y'], columns=['symbol', 'exchange', 'coeff'])
        self.endo = None
        self.current_var = None
        self.params = None
        self.resid = None
        self.current_tab = None
        self.set_default_timeframe()
        self.coint_method = 'JH'
        self.johansen = None

        self.lines = [self.lineEdit_2, self.lineEdit_5, self.lineEdit_6, self.lineEdit_9,
                      self.lineEdit_15, self.lineEdit_16, self.lineEdit_10, self.lineEdit_8, self.lineEdit_11,
                      self.lineEdit_12, self.lineEdit_7, self.lineEdit_17, self.lineEdit_21, self.lineEdit_18,
                      self.lineEdit_13, self.lineEdit_14, self.lineEdit_19]

        for line in self.lines:
            line.setStyleSheet("background-color: rgb(12, 52, 82)\n;"
                               "color: rgb(255, 255, 255);")

        self.listWidget.setAlternatingRowColors(True)
        self.listWidget.setStyleSheet("background-color: rgb(6, 12, 26);\n"
                                      "alternate-background-color: rgb(2, 26, 36);\n"
                                      "selection-background-color: rgb(2, 36, 16);\n"
                                      "color: rgb(255, 255, 255);\n"
                                      "font: 75 11pt \"FreeMono Bold\";")

        self.pushButton_33.clicked.connect(self.delete_variable)
        self.pushButton_46.clicked.connect(self.config_window)
        self.pushButton_43.clicked.connect(self.save_algo)
        self.pushButton_48.clicked.connect(self.delete_algo)
        self.pushButton_34.clicked.connect(self.add_exog)
        self.pushButton_36.clicked.connect(self.add_endo)
        self.pushButton_35.clicked.connect(self.add_custom_var)
        self.pushButton_52.clicked.connect(self.test_coint)
        self.pushButton_44.clicked.connect(self.test_stationarity)
        self.pushButton_41.clicked.connect(self.backtest)
        self.checkBox_8.stateChanged.connect(self.set_const)
        self.comboBox_32.currentTextChanged.connect(self.activate_custom)
        self.horizontalSlider_3.sliderReleased.connect(self.adjust_ratio)
        self.groupBox_2.clicked.connect(self.toggle_custom_time)

        QtCore.QMetaObject.connectSlotsByName(self)

    # toggles custom timeframe
    def toggle_custom_time(self):
        if self.groupBox_2.isChecked():
            self.enable_custom_time()
        else:
            self.disable_custom_time()

    # enables custom timeframe
    def enable_custom_time(self):
        for widget in [self.label_17, self.dateTimeEdit_3, self.dateTimeEdit_4, self.radioButton_2,
                       self.radioButton]:
            widget.setEnabled(True)

    # disables custom timeframe
    def disable_custom_time(self):
        for widget in [ self.label_17, self.dateTimeEdit_3, self.dateTimeEdit_4, self.radioButton_2, self.radioButton]:
            widget.setEnabled(False)

    def adjust_ratio(self):
        ratio = self.horizontalSlider_3.value()
        self.groupBox_3.setTitle(f'long/short ratio: {ratio}')

    # returns natural logarithms
    @staticmethod
    def get_logs(col):
        return np.log(col)

    # returns differences
    @staticmethod
    def get_diffs(col):
        return col - col.shift(1)

    # adds natural logarithm of a variable
    def add_log_var(self):
        var = self.df.iloc[self.tableView_2.currentIndex().row(), 0]
        name = 'log_' + var
        self.df.loc[f'x{len(self.df)}'] = [name, '', '']
        self.refresh_table()

    # adds differences of a variable
    def add_diff_var(self):
        var = self.df.iloc[self.tableView_2.currentIndex().row(), 0]
        name = 'd_' + var
        self.df.loc[f'x{len(self.df)}'] = [name, '', '']
        self.refresh_table()

    # adds custom variable
    def add_custom_var(self):
        if self.comboBox_32.currentText() == 'logs':
            self.add_log_var()
        elif self.comboBox_32.currentText() == 'diffs':
            self.add_diff_var()
        else:
            text = self.lineEdit_15.text()
            self.df.loc[f'x{len(self.df)}'] = [text, '', '']

    # enables custom variables
    def activate_custom(self):
        if self.comboBox_32.currentText() == 'custom':
            self.lineEdit_15.setEnabled(True)
        else:
            return

    def refresh_index(self):
        pass

    # resizes columns
    def resize_columns(self):
        self.tableView_2.setColumnWidth(0, 86)
        self.tableView_2.setColumnWidth(1, 85)
        self.tableView_2.setColumnWidth(2, 69)

    # refreshes table with variables
    def refresh_table(self):
        model = PandasModel(self.df)
        self.tableView_2.setModel(model)
        self.resize_columns()

    # adds endoenous variable (y)
    def add_endo(self):
        if self.zaur.current_ticker in self.df['symbol'].values:
            return
        self.endo = self.zaur.current_ticker
        self.df.loc['y'] = [self.endo, self.zaur.current_exchange.id, '']
        self.refresh_table()

    # adds exogenous variable (x)
    def add_exog(self):
        if self.zaur.current_ticker in self.df['symbol'].values or len(self.df) == 6:
            return
        elif f'x{len(self.df)}' in self.df.index:
            if f'x{len(self.df) - 1}' in self.df.index:
                index = f'x{len(self.df) + 1}'
            else:
                index = f'x{len(self.df) - 1}'
        else:
            index = f'x{len(self.df)}'

        self.df.loc[index] = [self.zaur.current_ticker, self.zaur.current_exchange.id, '']
        self.refresh_table()

    # method for variable selection
    def select_var(self, var):
        self.current_var = var

    # deletes a variable
    def delete_variable(self):
        n = self.tableView_2.currentIndex().row()
        indx = self.df.index[n]
        if indx == 'y':
            self.endo = None
        self.df.drop(index=indx, inplace=True, errors='ignore')
        self.refresh_table()

    #open configuration window
    def config_window(self):
        window = TestSettings(self.zaur)
        window.show()
        window.exec()

    # deletes an algorithm
    def delete_algo(self):
        algo_name = self.listWidget.currentItem().text()
        self.listWidget.clear()
        self.zaur.delete_algo(algo_name)
        self.listWidget.addItems(self.zaur.algos.keys())

    # saves an algorithm
    def save_algo(self):
        name = self.lineEdit_2.text()
        if not name:
            error_dialog = QtWidgets.QErrorMessage(self)
            error_dialog.showMessage('Please input name.')
            return
        elif name in self.zaur.algos.keys():
            error_dialog = QtWidgets.QErrorMessage(self)
            error_dialog.showMessage(f'Name {name} is already taken.')
            return
        elif self.comboBox_22.currentText() == 'Engle-Granger':

            entry_z = float(self.lineEdit_5.text())
            stop_loss_z = float(self.lineEdit_6.text())
            algo = StatArbAlgorithm(name, self.params, entry_z, stop_loss_z)
            self.zaur.save_algo(algo)
            self.df['coeff'] = list(map(lambda x: self.params[x].__round__(3), self.df['symbol']))
            self.refresh_table()
            self.listWidget.addItem(name)
            #self.zaur.db.execute_query("""INSERT INTO""")

        elif self.comboBox_22.currentText() == 'Johansen':
            self.save_johansen_params()

    # adds or removes const
    def set_const(self):
        if self.checkBox_8.isChecked():
            self.df.loc['c'] = ['const', '', '']
        else:
            self.df.drop(index='c', inplace=True, errors='ignore')

        self.refresh_table()

    def refresh_index(self):
        self.df['var'] = None
        self.df[self.df['coeff'] == 1]['var'] = 'y'
        for i in range(len(self.df) - 1):
            if not self.df.iloc[i]['var']:
                self.df.iloc[i]['var'] = f'x{i + 1}'
            else:
                continue
        self.df.set_index('var', inplace=True, drop=False)
        self.refresh_table()

    # stationarity tests
    def test_stationarity(self):
        timeframe = self.comboBox_31.currentText()
        since = self.zaur.get_since(timeframe)
        interval = self.comboBox_30.currentText()

        if self.checkBox_7.isChecked():
            df = self.zaur.get_data2(self.zaur.current_exchange.id, list(self.df['symbol']), interval, since)
        else:
            ticker = self.df.iloc[self.tableView_2.currentIndex().row(), 0]
            df = self.zaur.get_data(self.zaur.current_exchange.id, ticker, interval, since)

        for col in df.columns:
            for i in range(self.spinBox.value()):
                if i == 0:
                    df[f'd{i + 1}_{col}'] = df[col] - df[col].shift(1)
                else:
                    df[f'd{i + 1}_{col}'] = df[f'd{i}_{col}'] - df[f'd{i}_{col}'].shift(1)

        adf = self.checkBox_10.isChecked()
        kpss = self.checkBox_11.isChecked()
        results = self.zaur.test_stationarity(df, adf=adf, kpss=kpss)
        test_window = TestWindow(results)
        test_window.show()
        test_window.exec()
        return

    # wrapper for cointegration testing - EG or Johansen
    def test_coint(self):
        if self.comboBox_30.currentText() == '1m':

            dialog = QtWidgets.QDialog()

            dialog.setStyleSheet("background-color: rgb(12, 28, 48);\n"
                                 "color: rgb(255, 255, 255);\n"
                                 "font: 75 11pt \"FreeMono Bold\";")
            dialog.exec_()
            return
            #ok = QtWidgets.QPushButton(dialog)
            #ok = QtWidgets.QPushButton(dialog)
            #nope = QtWidgets.QPushButton(dialog)
            #ok = QtWidgets.QPushButton(dialog)



        if self.comboBox_22.currentText() == 'Engle-Granger':
            self.EG_test()
        elif self.comboBox_22.currentText() == 'Johansen':
            self.johansen_test()
        else:
            pass

    # saves parameters from Johansen test
    def save_johansen_params(self):
        indx = self.current_tab.eigenvector_table.currentIndex().row()
        print(indx)
        row = self.current_tab.eigen_vectors.loc[indx]
        print(row)
        name = self.lineEdit_2.text()
        entry_z = float(self.lineEdit_5.text())
        stop_loss_z = float(self.lineEdit_6.text())
        algo = StatArbAlgorithm(name, row, entry_z, stop_loss_z)
        self.zaur.save_algo(algo)
        self.df['coeff'] = row.values
        self.refresh_table()
        self.listWidget.addItem(name)
        dialog = QtWidgets.QMessageBox()
        dialog.setText('Algorithm saved.')
        dialog.setStyleSheet("background-color: rgb(12, 28, 48);\n"
                             "color: rgb(255, 255, 255);\n"
                             "font: 75 11pt \"FreeMono Bold\";")
        dialog.exec_()

    # Johansen cointegration test
    def johansen_test(self):
        coins = list(self.df['symbol'])
        timeframe = self.comboBox_31.currentText()
        since = self.zaur.get_since(timeframe)
        interval = self.comboBox_30.currentText()

        df = self.zaur.get_data2(self.zaur.current_exchange.id, coins, interval, since)

        self.johansen = vecm.coint_johansen(df, self.zaur.johansen_config['det_order'], self.zaur.johansen_config['n_lags'])

        title = '_'.join([x.split('/')[0] for x in coins]) + f'_{interval}'

        self.johansen_tabs = JohansenTabs(self.tabWidget_8, self.zaur, self.johansen, coins, df.index)
        self.tabWidget_8.addTab(self.johansen_tabs, f"Johanses-test {title}")
        self.tabWidget_2.setCurrentIndex(1)
        self.current_tab = self.johansen_tabs
        self.coint_method = 'JH'

    # Engle-Granger cointegration test
    def EG_test(self):

        endo = self.df.at['y', 'symbol']
        coins = list(self.df['symbol'])
        coins.remove(endo)
        coins.insert(0, endo)

        if not endo:
            dialog = QtWidgets.QMessageBox()
            dialog.setText('Please select endogenous variable.')
            dialog.setStyleSheet("background-color: rgb(12, 28, 48);\n"
                                 "color: rgb(255, 255, 255);\n"
                                 "font: 75 11pt \"FreeMono Bold\";")
            dialog.exec_()
            return

        elif len(coins) < 2:
            dialog = QtWidgets.QMessageBox()
            dialog.setText('Please select exogenous variable(s).')
            dialog.setStyleSheet("background-color: rgb(12, 28, 48);\n"
                                 "color: rgb(255, 255, 255);\n"
                                 "font: 75 11pt \"FreeMono Bold\";")
            dialog.exec_()
            return

        else:
            if self.checkBox_8.isChecked():
                const = True
            else:
                const = False

            timeframe = self.comboBox_31.currentText()
            since = self.zaur.get_since(timeframe)
            interval = self.comboBox_30.currentText()

            df = self.zaur.get_data2(self.zaur.current_exchange.id, coins, interval, since)
            df.to_csv('newdfdf12.csv')
            if self.checkBox_82.isChecked():
                df = np.log(df)
            else:
                pass

            df_lines = self.zaur.get_base_100_returns(df)

            tests, summary, self.params, self.resid, corr_matrix = self.zaur.engle_granger_coint(df, const)

            self.refresh_table()

            tabs = EGTabs(self.tabWidget_8, tests, summary, df_lines, self.resid, corr_matrix)

            title = '_'.join([x.split('/')[0] for x in coins]) + f'_{interval}'

            self.tabWidget_8.addTab(tabs, f"EG-test {title}")
            self.tabWidget_2.setCurrentIndex(1)
            self.current_tab = tabs
            self.coint_method = 'EG'

    # backtests an algorithm
    def backtest(self):
        timeframe = self.comboBox_31.currentText()
        since = self.zaur.get_since(timeframe)
        interval = self.comboBox_30.currentText()
        algo_name = self.listWidget.currentItem().text()
        entry_z_score = float(self.lineEdit_5.text())
        stop_loss = float(self.lineEdit_6.text())

        if self.lineEdit_14.text():
            ma_window = int(self.lineEdit_14.text())
        else:
            ma_window = ''

        coins = self.df['symbol'].values

        df = self.zaur.get_data2(self.zaur.current_exchange.id, coins, interval, since)
        if self.coint_method == 'EG':
            df['spread'] = self.resid
        elif self.coint_method == 'JH':
            df['spread'] = self.johansen.r0t.fillna()
        else:
            pass

        df = self.zaur.get_z_score(df, window=ma_window)
        df2, results = self.zaur.algos[algo_name].backtest(df, entry_z_score, stop_loss)

        tab = BacktestTabs(self.tabWidget_8, df2, results, df['z_score'])

        self.tabWidget_8.addTab(tab, f"Backtest {algo_name}")
        self.tabWidget_2.setCurrentIndex(1)

    # sets timeframe to 3M
    def set_default_timeframe(self):
        self.comboBox_31.setCurrentText('3M')

    # updates intervals to match current exchanges available intervals
    def update_intervals(self):
        self.comboBox_30.clear()
        try:
            self.comboBox_30.addItems(self.zaur.current_exchange.timeframes.keys())
        except Exception:
            pass

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Form", "Form"))
        self.groupBox_11.setTitle(_translate("Form", "  algorithm name         currency"))
        self.comboBox_5.setItemText(0, _translate("Form", "USDT"))
        self.comboBox_5.setItemText(1, _translate("Form", "PLN"))
        self.comboBox_5.setItemText(2, _translate("Form", "EUR"))
        self.comboBox_5.setItemText(3, _translate("Form", "USD"))
        self.comboBox_5.setItemText(4, _translate("Form", "GBP"))
        self.comboBox_5.setItemText(5, _translate("Form", "CHF"))
        self.comboBox_5.setItemText(6, _translate("Form", "JPY"))
        self.comboBox_5.setItemText(7, _translate("Form", "CNY"))
        self.comboBox_5.setItemText(8, _translate("Form", "BTC"))
        self.comboBox_5.setItemText(9, _translate("Form", "ETH"))
        self.comboBox_5.setItemText(10, _translate("Form", "LTC"))
        self.comboBox_5.setItemText(11, _translate("Form", "XRP"))
        self.comboBox_5.setItemText(12, _translate("Form", "XMR"))
        self.pushButton_43.setText(_translate("Form", "save"))
        self.pushButton_48.setText(_translate("Form", "del"))
        self.label_16.setText(_translate("Form", "algo list"))
        self.groupBox_7.setTitle(_translate("Form", "parameters"))
        self.label_6.setText(_translate("Form", "entry z-score (sigma)"))
        self.label_8.setText(_translate("Form", "stop loss (sigma)"))
        self.label_9.setText(_translate("Form", "stop algo (% drowdown)"))
        self.lineEdit_5.setText(_translate("Form", "2"))
        self.lineEdit_6.setText(_translate("Form", "4"))
        self.groupBox_3.setTitle(_translate("Form", "long/short ratio: "))
        self.label_11.setText(_translate("Form", "neutral"))
        self.label_7.setText(_translate("Form", "100% long"))
        self.label_10.setText(_translate("Form", "100% short"))
        self.checkBox_2.setText(_translate("Form", "leverage"))
        self.label_12.setText(_translate("Form", "order types"))
        self.comboBox_7.setItemText(0, _translate("Form", "enter trade"))
        self.comboBox_7.setItemText(1, _translate("Form", "take profit"))
        self.comboBox_7.setItemText(2, _translate("Form", "stop loss"))
        self.comboBox_8.setItemText(0, _translate("Form", "limit"))
        self.comboBox_8.setItemText(1, _translate("Form", "market"))
        self.checkBox_5.setText(_translate("Form", "MA window"))
        self.pushButton_42.setText(_translate("Form", "clear"))
        self.pushButton_41.setText(_translate("Form", "backtest"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_9), _translate("Form", "stat arb"))
        self.label_21.setText(_translate("Form", "TP (as %)"))
        self.label_23.setText(_translate("Form", "stop algo (% drawdown)"))
        self.label_26.setText(_translate("Form", "order types"))
        self.comboBox_11.setItemText(0, _translate("Form", "enter trade"))
        self.comboBox_11.setItemText(1, _translate("Form", "take profit"))
        self.comboBox_11.setItemText(2, _translate("Form", "stop loss"))
        self.comboBox_12.setItemText(0, _translate("Form", "limit"))
        self.comboBox_12.setItemText(1, _translate("Form", "market"))
        self.comboBox_12.setItemText(2, _translate("Form", "stop market"))
        self.label_31.setText(_translate("Form", "MA1 (long)"))
        self.label_40.setText(_translate("Form", "MA2 (short)"))
        self.checkBox_3.setText(_translate("Form", "leverage"))
        self.label_24.setText(_translate("Form", "SL (as %)"))
        self.pushButton_47.setText(_translate("Form", "clear"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_10), _translate("Form", "MA-crossover"))
        self.label_29.setText(_translate("Form", "twitter to follow"))
        self.label_50.setText(_translate("Form", "exchange"))
        self.label_51.setText(_translate("Form", "market"))
        self.comboBox_25.setItemText(0, _translate("Form", "spot"))
        self.comboBox_25.setItemText(1, _translate("Form", "futures"))
        self.comboBox_16.setItemText(0, _translate("Form", "seconds"))
        self.comboBox_16.setItemText(1, _translate("Form", "minutes"))
        self.comboBox_16.setItemText(2, _translate("Form", "hours"))
        self.comboBox_16.setItemText(3, _translate("Form", "days"))
        self.checkBox.setText(_translate("Form", "timeout"))
        self.label_22.setText(_translate("Form", "TP (as %)"))
        self.label_25.setText(_translate("Form", "SL (as %)"))
        self.checkBox_4.setText(_translate("Form", "leverage"))
        self.label_30.setText(_translate("Form", "order types"))
        self.comboBox_13.setItemText(0, _translate("Form", "limit"))
        self.comboBox_13.setItemText(1, _translate("Form", "market"))
        self.comboBox_13.setItemText(2, _translate("Form", "stop market"))
        self.comboBox_14.setItemText(0, _translate("Form", "enter trade"))
        self.comboBox_14.setItemText(1, _translate("Form", "take profit"))
        self.comboBox_14.setItemText(2, _translate("Form", "stop loss"))
        self.pushButton_45.setText(_translate("Form", "clear"))
        self.tabWidget_4.setTabText(self.tabWidget_4.indexOf(self.tab_11), _translate("Form", "twitter"))
        self.groupBox.setTitle(_translate("Form", "timeframe"))
        self.comboBox_31.setItemText(0, _translate("Form", "1M"))
        self.comboBox_31.setItemText(1, _translate("Form", "12h"))
        self.comboBox_31.setItemText(2, _translate("Form", "24h"))
        self.comboBox_31.setItemText(3, _translate("Form", "2d"))
        self.comboBox_31.setItemText(4, _translate("Form", "3d"))
        self.comboBox_31.setItemText(5, _translate("Form", "7d"))
        self.comboBox_31.setItemText(6, _translate("Form", "14d"))
        self.comboBox_31.setItemText(7, _translate("Form", "2M"))
        self.comboBox_31.setItemText(8, _translate("Form", "3M"))
        self.comboBox_31.setItemText(9, _translate("Form", "6M"))
        self.comboBox_31.setItemText(10, _translate("Form", "1y"))
        self.comboBox_31.setItemText(11, _translate("Form", "2y"))
        self.comboBox_31.setItemText(12, _translate("Form", "3y"))
        self.comboBox_31.setItemText(13, _translate("Form", "5y"))
        self.comboBox_31.setItemText(14, _translate("Form", "10y"))
        self.label_15.setText(_translate("Form", "interval"))
        self.groupBox_5.setTitle(_translate("Form", "               variables"))
        self.pushButton_36.setText(_translate("Form", ">"))
        self.pushButton_33.setText(_translate("Form", "<"))
        self.pushButton_35.setText(_translate("Form", "add"))
        self.pushButton_34.setText(_translate("Form", ">"))
        self.checkBox_8.setText(_translate("Form", "c"))
        self.pushButton_51.setText(_translate("Form", ">"))
        self.pushButton_53.setText(_translate("Form", ">"))
        self.comboBox_32.setItemText(0, _translate("Form", "logs"))
        self.comboBox_32.setItemText(1, _translate("Form", "diffs"))
        self.comboBox_32.setItemText(2, _translate("Form", "custom"))
        self.groupBox_10.setTitle(_translate("Form", "  statistics"))
        self.groupBox_12.setTitle(_translate("Form", " stationarity"))
        self.pushButton_44.setText(_translate("Form", "run"))
        self.checkBox_7.setText(_translate("Form", "all vars"))
        self.checkBox_10.setText(_translate("Form", "ADF"))
        self.checkBox_11.setText(_translate("Form", "KPSS"))
        self.pushButton_46.setText(_translate("Form", "config"))
        self.label_19.setText(_translate("Form", "diffs"))
        self.groupBox_9.setTitle(_translate("Form", " cointegration"))
        self.comboBox_22.setItemText(0, _translate("Form", "Engle-Granger"))
        self.comboBox_22.setItemText(1, _translate("Form", "Johansen"))
        self.pushButton_52.setText(_translate("Form", "run"))
        self.groupBox_2.setTitle(_translate("Form", "custom"))
        self.label_17.setText(_translate("Form", "start date"))
        self.radioButton.setText(_translate("Form", "end date"))
        self.radioButton_2.setText(_translate("Form", "now"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), _translate("Form", "algorithm wizard"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_5), _translate("Form", "analyses"))



